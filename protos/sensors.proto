syntax = "proto3";

// The greeting service definition.
service Sensors {
  // Sends a greeting
  rpc GetLux (GetLuxRequest) returns (GetLuxReply) {}
  rpc GetTemperature (GetTemperatureRequest) returns (GetTemperatureReply) {}
  rpc GetSound (GetLoudnessRequest) returns (GetLoudnessReply) {}
  rpc GetIrButtonPressed (GetIrButtonPressedRequest) returns (GetIrButtonPressedReply) {}
  rpc GetSonar (GetSonarRequest) returns (GetSonarReply) {}
  rpc SetLedStrip (SetLedStripRequest) returns (SetLedStripReply) {}
  rpc GetButtonPressed (GetButtonPressedRequest) returns (GetButtonPressedReply) {}
}

// The request message containing the user's name.
message GetLuxRequest {}

// The response message containing the greetings
message GetLuxReply {
  int32 lux = 1;
}

// The request message containing the user's name.
message GetTemperatureRequest {}

// The response message containing the greetings
message GetTemperatureReply {
  float temperature_c = 1;
  float temperature_f = 2;
}

// The request message containing the user's name.
message GetLoudnessRequest {}

// The response message containing the greetings
message GetLoudnessReply {
  int32 loudness = 1;
}

message GetIrButtonPressedRequest{}

message GetIrButtonPressedReply {
	int32 button = 1;
}

message GetSonarRequest{}

message GetSonarReply {
  int32 distance = 1;
}

message GetButtonPressedRequest{}

message GetButtonPressedReply {
  bool pressed = 1;
}

message SetLedStripRequest {
  int32 length  = 1; // the length of the flow, the flow will always begin with index 0.
  int32 brightness = 2; // 0~100
  int32 speed = 3; // 1~10, 10 is the fastest.
}

message SetLedStripReply {}
